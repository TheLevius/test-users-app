{"version":3,"sources":["components/Users/Users.module.css","components/Users/User/User.module.css","components/Users/UserSetter/UserSetter.module.css","components/Header/Header.module.css","api/users-api.ts","redux/app-reducer.ts","redux/store.ts","assets/img/png/cybava.png","components/Users/User/User.tsx","components/Users/UserSetter/UserSetter.tsx","components/Users/Users.tsx","components/Header/Header.tsx","App.tsx","index.tsx"],"names":["module","exports","reqres","axios","create","baseURL","usersAPI","per_page","total","get","params","initialState","error","users","appActions","type","payload","userId","first_name","last_name","getUsersTC","dispatch","a","data","rootReducer","combineReducers","app","state","action","filter","u","id","Math","floor","random","email","avatar","store","createStore","applyMiddleware","thunk","User","React","memo","useDispatch","console","log","className","styles","userCell","userPicCol","src","plugAva","alt","userPic","userNameCol","userDeleteCol","onClick","UserSetter","useState","editMode","setEditMode","firstName","setFirstName","lastName","setLastName","setEditModeToggle","prev","userSetForm","htmlFor","value","userInput","onChange","e","target","userSetToggleHolder","userSetBtnHolder","Users","useSelector","useEffect","usersContainer","usersPanel","usersGetBox","usersSetBox","usersBox","map","user","Header","name","path","links","wrapper","navBox","link","exact","to","navLink","activeClassName","activeNavLink","App","render","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.24b71d57.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"usersContainer\":\"Users_usersContainer__2QuHa\",\"usersPanel\":\"Users_usersPanel__3RC5M\",\"usersGetBox\":\"Users_usersGetBox__x-3ZD\",\"usersSetBox\":\"Users_usersSetBox__19_a1\",\"usersBox\":\"Users_usersBox__15W-3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userCell\":\"User_userCell__Z6o1e\",\"userPic\":\"User_userPic__1r5K7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userSetContainer\":\"UserSetter_userSetContainer__2mFpz\",\"userSetForm\":\"UserSetter_userSetForm__3fgFP\",\"userInput\":\"UserSetter_userInput__2z7E5\",\"userSetToggleHolder\":\"UserSetter_userSetToggleHolder__jaKoz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Header_wrapper__e3RJi\",\"navBox\":\"Header_navBox__18-6l\",\"navLink\":\"Header_navLink__28XCy\",\"activeNavLink\":\"Header_activeNavLink__fcrnw\"};","import axios from 'axios';\r\n\r\nconst reqres = axios.create({\r\n    baseURL: 'https://reqres.in/api'\r\n});\r\n\r\nexport const usersAPI = {\r\n    getUsers(per_page: number = 12, total: number = 12) {\r\n        return reqres.get<UsersResponseType>('/users', {params: {\r\n                per_page,\r\n                total,\r\n                'b&a': 'b&a'\r\n            }})\r\n    }\r\n}\r\n\r\nexport type UserType = {\r\n    id: number;\r\n    email: string;\r\n    first_name: string;\r\n    last_name: string;\r\n    avatar: string;\r\n}\r\n\r\nexport type UsersResponseType = {\r\n    data: UserType[]\r\n    page: number;\r\n    per_page: number;\r\n    support: {\r\n        text: string;\r\n        url: string;\r\n    };\r\n    total: number;\r\n    total_pages: number;\r\n}","import {usersAPI, UserType} from '../api/users-api';\r\nimport {Dispatch} from 'redux';\r\n\r\n\r\nconst initialState: InitialStateType = {\r\n    error: null,\r\n    users: []\r\n}\r\n\r\nexport const appReducer = (state: InitialStateType = initialState, action: AppActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case 'APP/ERROR_DETECTED':\r\n        case 'APP/USERS_CHANGED':\r\n            return ({\r\n                ...state,\r\n                ...action.payload\r\n            });\r\n        case 'APP/USER_DELETED':\r\n            return ({\r\n                ...state,\r\n                users: [...state.users.filter(u => u.id !== action.payload.userId)]\r\n            })\r\n        case 'APP/USER_ADDED':\r\n            return ({\r\n                ...state,\r\n                users: [{\r\n                    id: Math.floor(Math.random() * 1000),\r\n                    email: '',\r\n                    avatar: '',\r\n                    ...action.payload\r\n                }, ...state.users]\r\n            })\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const appActions = {\r\n    errorDetectedAC: (error: string | null) => ({type: 'APP/ERROR_DETECTED', payload: {error}} as const),\r\n    usersChangedAC: (users: UserType[]) => ({type: 'APP/USERS_CHANGED', payload: {users}} as const),\r\n    userDeletedAC: (userId: number) => ({type: 'APP/USER_DELETED', payload: {userId}} as const),\r\n    userAddedAC: (first_name: string, last_name: string) => ({\r\n        type: 'APP/USER_ADDED', payload: {\r\n            first_name,\r\n            last_name,\r\n        }\r\n    } as const)\r\n}\r\ntype InferActionsType<T> = T extends { [key: string]: infer P } ? P : never;\r\nexport type AppActionsType = ReturnType<InferActionsType<typeof appActions>>\r\n\r\nexport const getUsersTC = () => async (dispatch: Dispatch) => {\r\n    try {\r\n        const {data} = await usersAPI.getUsers();\r\n        dispatch(appActions.usersChangedAC(data.data));\r\n    } catch (error) {\r\n        dispatch(appActions.errorDetectedAC(error))\r\n    }\r\n}\r\n\r\ntype InitialStateType = {\r\n    error: string | null;\r\n    users: UserType[]\r\n}","import {createStore, combineReducers, applyMiddleware} from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport {appReducer} from './app-reducer';\r\nconst rootReducer = combineReducers({\r\n    app: appReducer\r\n});\r\n\r\ntype RootReducerType = typeof rootReducer;\r\nexport type AppStateType = ReturnType<RootReducerType>;\r\n\r\nexport const store = createStore(rootReducer, applyMiddleware(thunk));","export default __webpack_public_path__ + \"static/media/cybava.a68790ab.png\";","import React, {FC} from 'react';\r\nimport {UserType} from '../../../api/users-api';\r\nimport styles from './User.module.css';\r\nimport {useDispatch} from 'react-redux';\r\nimport {appActions} from '../../../redux/app-reducer';\r\nimport plugAva from './../../../assets/img/png/cybava.png';\r\n\r\nexport const User: FC<UserType> = React.memo(({id, avatar, first_name, last_name}) => {\r\n    const dispatch = useDispatch();\r\n\r\n    const deleteClickHandle = () => {\r\n        dispatch(appActions.userDeletedAC(id));\r\n    }\r\n    console.log('user render')\r\n    return (\r\n        <div className={styles.userCell}>\r\n            <div className={styles.userPicCol}>\r\n                <img src={!!avatar ? avatar : plugAva}\r\n                     alt={`The avatar of ${first_name} ${last_name}`}\r\n                     className={styles.userPic}\r\n                />\r\n            </div>\r\n            <div className={styles.userNameCol}><span>{first_name} {last_name}</span></div>\r\n            <div className={styles.userDeleteCol}>\r\n                <button onClick={deleteClickHandle}>Delete</button>\r\n            </div>\r\n        </div>\r\n    )\r\n});","import React, {ChangeEvent, FC, useState} from 'react';\r\nimport styles from './UserSetter.module.css';\r\nimport {useDispatch} from 'react-redux';\r\nimport {appActions} from '../../../redux/app-reducer';\r\n\r\nexport const UserSetter: FC<{}> = ({...props}) => {\r\n    const dispatch = useDispatch();\r\n    const [editMode, setEditMode] = useState<boolean>(false);\r\n    const [firstName, setFirstName] = useState<string>('');\r\n    const [lastName, setLastName] = useState<string>('');\r\n\r\n    const setEditModeToggle = () => {\r\n        setEditMode(prev => !prev);\r\n    }\r\n\r\n    const addUserClickHandle = () => {\r\n        if(!!firstName && !!lastName) {\r\n            dispatch(appActions.userAddedAC(firstName, lastName));\r\n            setFirstName('')\r\n            setLastName('')\r\n            setEditModeToggle();\r\n        }\r\n        return;\r\n    }\r\n\r\n    const onFirstNameChangeHandle = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setFirstName(e.target.value);\r\n    }\r\n    const onLastNameChangeHandle = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setLastName(e.target.value);\r\n    }\r\n\r\n    if (editMode) {\r\n        return (\r\n            <div>\r\n                <div className={styles.userSetForm}>\r\n                    <label htmlFor='first-name'>\r\n                        first name:\r\n                        <input type={'text'}\r\n                               value={firstName}\r\n                               id={'first-name'}\r\n                               className={styles.userInput}\r\n                               onChange={onFirstNameChangeHandle}\r\n                        />\r\n                    </label>\r\n                    <label htmlFor='last-name'>\r\n                        last name:\r\n                        <input type={'text'}\r\n                               value={lastName}\r\n                               id={'last-name'}\r\n                               className={styles.userInput}\r\n                               onChange={onLastNameChangeHandle}\r\n                        />\r\n                    </label>\r\n                </div>\r\n                <div className={styles.userSetToggleHolder}>\r\n                    <button onClick={addUserClickHandle}>Add User</button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n    return (\r\n        <div className={styles.userSetBtnHolder}>\r\n            <button onClick={setEditModeToggle}>\r\n                Add User\r\n            </button>\r\n        </div>\r\n    )\r\n}","import React, {useEffect} from 'react';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport styles from './Users.module.css';\r\nimport {AppStateType} from '../../redux/store';\r\nimport {UserType} from '../../api/users-api';\r\nimport {User} from './User/User';\r\nimport {getUsersTC} from '../../redux/app-reducer';\r\nimport {UserSetter} from './UserSetter/UserSetter';\r\n\r\nexport const Users = () => {\r\n    const dispatch = useDispatch();\r\n    const users = useSelector<AppStateType, UserType[]>(state => state.app.users);\r\n\r\n    const getUsersClickHandle = () => {\r\n        dispatch(getUsersTC())\r\n    }\r\n    useEffect(()=>{\r\n        dispatch(getUsersTC())\r\n    }, [dispatch])\r\n    return (\r\n        <div className={styles.usersContainer}>\r\n            <div className={styles.usersPanel}>\r\n                <div className={styles.usersGetBox}>\r\n                    <button onClick={getUsersClickHandle}>Download users</button>\r\n                </div>\r\n                <div className={styles.usersSetBox}>\r\n                    <UserSetter />\r\n                </div>\r\n            </div>\r\n            <div className={styles.usersBox}>\r\n                {users.map(user => (\r\n                    <User key={user.id}\r\n                          id={user.id}\r\n                          email={user.email}\r\n                          avatar={user.avatar}\r\n                          first_name={user.first_name}\r\n                          last_name={user.last_name}\r\n                    />\r\n                ))}\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}","import React, {FC, useState} from 'react';\r\nimport styles from './Header.module.css';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\nexport const Header: FC<{}> = ({...props}) => {\r\n\r\n    const [links] = useState( [\r\n        {name: 'Main', path: '/'},\r\n        {name: 'Employees', path: '/employees'},\r\n        ]);\r\n\r\n    return(\r\n        <div className={styles.wrapper}>\r\n            <nav className={styles.navBox}>\r\n                {links.map(link => (\r\n                    <NavLink exact to={`${link.path}`} key={link.name} className={styles.navLink} activeClassName={styles.activeNavLink}>\r\n                        <span>{link.name}</span>\r\n                    </NavLink>\r\n                ))}\r\n            </nav>\r\n        </div>\r\n    )\r\n}","import React from 'react';\nimport {Users} from './components/Users/Users';\nimport {Header} from './components/Header/Header';\nimport {Switch, Route} from 'react-router-dom';\nexport const App = ({...props}) => {\n\n    console.log('app render');\n    return (\n        <div className={'app'}>\n            <Header />\n            <Switch>\n                <Route path={'/'} exact render={()=>(\n                    <div className={'main-wrapper'}>\n                        <h2>Main Page</h2>\n                    </div>\n                )}/>\n                <Route path={'/employees'} render={()=><Users />} />\n            </Switch>\n\n        </div>\n    );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Provider} from 'react-redux';\nimport {store} from './redux/store';\nimport {HashRouter} from 'react-router-dom';\nimport {App} from './App';\nimport './index.css';\n\nReactDOM.render(<HashRouter>\n        <Provider store={store}>\n            <App />\n        </Provider>\n    </HashRouter>,\n  document.getElementById('root')\n);"],"sourceRoot":""}